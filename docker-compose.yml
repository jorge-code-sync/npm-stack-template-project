services:
  # DATABASE
  # postgres-db:
  #   container_name: postgres-db
  #   image: postgres:latest
  #   restart: always
  #   volumes:
  #     - ./volumes/postgres:/var/lib/postgresql/data
  #   ports:
  #     - ${DB_OUTSIDE_PORT:-5432}:5432
  #   environment:
  #     - POSTGRES_USER=${DB_USERNAME}
  #     - POSTGRES_PASSWORD=${DB_PASSWORD}
  #     - POSTGRES_DB=${DB_DATABASE}

  postgres:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      # - ./volumes/postgres:/var/lib/postgresql/data
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: elestio/pgadmin:latest
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword
    ports:
      - "8080:80" # pgAdmin accesible en localhost:8080
    depends_on:
      - postgres

volumes:
  postgres_data:
  pgadmin_data:

  # BACKEND
  # backend:
  #   build:
  #     context: ./backend
  #     dockerfile: docker/Dockerfile
  #   volumes:
  #     - ./backend/src:/usr/src/app/src
  #   command: npm run start:dev
  #   environment:
  #     - PORT=${BACKEND_PORT}
  #     - DATABASE_URL=${DB_URL}
  #   depends_on:
  #     - postgres-db

  # WEB CLIENT
  # web-client:
  #   build:
  #     context: ./frontend
  #     dockerfile: docker/Dockerfile
  #   ports:
  #     - ${WEB_CLIENT_OUTSIDE_PORT:-8080}:80
  #   volumes:
  #     - ./frontend/src:/app/src
  #   command: npm start
